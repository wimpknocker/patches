From 0b1d214eaa415b575eefb75d852c2a82c314e370 Mon Sep 17 00:00:00 2001
From: h3llrais3r <pooh_beer_1@hotmail.com>
Date: Wed, 19 Mar 2014 21:53:08 +0100
Subject: [PATCH] Reset the audio stream volume to fix low in-call volume bug

Due to a bug in the OMX system, the audio stream volume
is set to 0 after it was set to it's default volume.

Calling PhoneUtils.resetAudioStreamVolume()
triggers the system to reset the volume.

This should be called on every place where
is switched between audio modes.

REMARK: I think it only appears on the voice call stream,
        but to be sure I also do it on the bluetooth stream.

PS5: Make low in-call volume fix configurable By making it
     configurable, it can be integrated in Rom source without impact
     on other devices which don't have the problem

Change-Id: I5eb276744754f7d728b2e6ecf2c65a836f51c422
---
 res/values/config.xml                  | 12 ++++++++++++
 src/com/android/phone/AudioRouter.java | 22 ++++++++++++++++++++++
 src/com/android/phone/PhoneUtils.java  | 32 ++++++++++++++++++++++++++++++++
 3 files changed, 66 insertions(+)

diff --git a/res/values/config.xml b/res/values/config.xml
index 310c50c..c0a26e7 100644
--- a/res/values/config.xml
+++ b/res/values/config.xml
@@ -88,6 +88,18 @@
          the com.android.internal.telephony.Phone interface (false). -->
     <bool name="send_mic_mute_to_AudioManager">false</bool>
 
+    <!-- Determines whether the volume stream must be reset after a mute change
+         in com.android.phone.AudioRouter class.
+         Set the flag to true to solve the low in-call volume for STE devices
+         after accepting an incoming call. -->
+    <bool name="reset_volume_after_mute_change">true</bool>
+
+    <!-- Determines wheter the volume stream must be reset after a audio mode change
+         in com.android.phone.AudioRouter class.
+         Set the flag to true to solve the low in-call volume for STE devices
+         after switching between audio modes. -->
+    <bool name="reset_volume_after_audio_mode_change">true</bool>
+
     <!-- Determines if device implements a noise suppression device for in call audio-->
     <bool name="has_in_call_noise_suppression">false</bool>
 
diff --git a/src/com/android/phone/AudioRouter.java b/src/com/android/phone/AudioRouter.java
index 3c8e9d3..5576f2f 100644
--- a/src/com/android/phone/AudioRouter.java
+++ b/src/com/android/phone/AudioRouter.java
@@ -53,6 +53,11 @@
     private int mPreviousMode = AudioMode.EARPIECE;
     private int mSupportedModes = AudioMode.ALL_MODES;
 
+    // flags indicating if the audio stream volume must be reset
+    // set these flags to true to fix the low in-call volume on STE devices
+    private boolean resetVolumeAfterMuteChange = false;
+    private boolean resetVolumeAfterAudioModeChange = false;
+
     public AudioRouter(Context context, BluetoothManager bluetoothManager,
             WiredHeadsetManager wiredHeadsetManager, CallManager callManager) {
         mContext = context;
@@ -60,6 +65,12 @@ public AudioRouter(Context context, BluetoothManager bluetoothManager,
         mWiredHeadsetManager = wiredHeadsetManager;
         mCallManager = callManager;
 
+        // init reset volume flags
+        resetVolumeAfterMuteChange = mContext.getResources().getBoolean(
+                R.bool.reset_volume_after_mute_change);
+        resetVolumeAfterAudioModeChange = mContext.getResources().getBoolean(
+                R.bool.reset_volume_after_audio_mode_change);
+
         init();
     }
 
@@ -179,7 +190,13 @@ public void setSpeaker(boolean on) {
 
     public void onMuteChange(boolean muted) {
         logD("onMuteChange: " + muted);
+
         notifyListeners();
+
+        // Reset the audio volume stream after mute change
+        if (resetVolumeAfterMuteChange) {
+            PhoneUtils.resetAudioStreamVolume();
+        }
     }
 
     /**
@@ -350,6 +367,11 @@ private void updateAudioModeTo(int mode) {
         if (doNotify) {
             notifyListeners();
         }
+
+        // Reset the audio volume stream after audio mode change
+        if (resetVolumeAfterAudioModeChange) {
+            PhoneUtils.resetAudioStreamVolume();
+        }
     }
 
     /**
diff --git a/src/com/android/phone/PhoneUtils.java b/src/com/android/phone/PhoneUtils.java
index e03171e..606f14f 100644
--- a/src/com/android/phone/PhoneUtils.java
+++ b/src/com/android/phone/PhoneUtils.java
@@ -2074,6 +2074,38 @@ static void setMute(boolean muted) {
         }
     }
 
+    /**
+     * Reset the audio stream volume to fix the low in-call volume bug.
+     *
+     * Due to a bug in the OMX system, the audio stream volume is set to 0 after it was set to it's default volume.
+     * Calling PhoneUtils.resetAudioStreamVolume() triggers the system to reset the volume.
+     *
+     * This should be called on every place where is switched between audio modes.
+     *
+     * REMARK: I think it only appears on the voice call stream, but to be sure I also do it on the bluetooth stream.
+     */
+    static void resetAudioStreamVolume() {
+        PhoneGlobals app = PhoneGlobals.getInstance();
+        BluetoothManager btManager = app.getBluetoothManager();
+        AudioManager audioManager = (AudioManager) app.getSystemService(Context.AUDIO_SERVICE);
+        // determine actual streamType
+        int streamType = AudioManager.STREAM_VOICE_CALL;
+        if (btManager.isBluetoothHeadsetAudioOn()) {
+            streamType = AudioManager.STREAM_BLUETOOTH_SCO;
+        }
+        // determine volume and 1 level lower volume (lowest level can be 0)
+        int volume = audioManager.getStreamVolume(streamType);
+        int lowerVolume = volume - 1;
+        if (lowerVolume < 0) {
+            lowerVolume = 0;
+        }
+        log("resetAudioStreamVolume (streamType=" + streamType + ", streamVolume=" + volume + ")...");
+        // It's important to change it to another volume before restoring the original volume,
+        // otherwise the volume change will NOT be triggered!!
+        audioManager.setStreamVolume(streamType, lowerVolume, 0);
+        audioManager.setStreamVolume(streamType, volume, 0);
+    }
+
     static boolean isInEmergencyCall(CallManager cm) {
         for (Connection cn : cm.getActiveFgCall().getConnections()) {
             if (PhoneNumberUtils.isLocalEmergencyNumber(cn.getAddress(),
